var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import firebase from 'firebase/compat/app';
import 'firebase/compat/auth';
import 'firebase/compat/firestore';
import 'firebase/compat/storage';
import { log } from 'misc';
var FirebaseWrapper = /** @class */ (function () {
    function FirebaseWrapper(inputOptions, firebaseConfig) {
        var optionsSafe = inputOptions || {};
        this.options = optionsSafe;
        this.app = window['_app'] = ObtainFirebaseApp(firebaseConfig, optionsSafe);
        this.firestore = this.app.firestore();
    }
    FirebaseWrapper.prototype.dbGetCollection = function (absolutePath) {
        return this.firestore.collection(absolutePath);
    };
    FirebaseWrapper.prototype.dbCreateBatch = function () {
        return this.firestore.batch();
    };
    FirebaseWrapper.prototype.dbMakeNewId = function () {
        return this.firestore.collection("collections").doc().id;
    };
    FirebaseWrapper.prototype.OnUserLogout = function (callBack) {
        this.app.auth().onAuthStateChanged(function (user) {
            var isLoggedOut = !user;
            log('FirebaseWrapper.OnUserLogout', { user: user, isLoggedOut: isLoggedOut });
            if (isLoggedOut) {
                callBack(user);
            }
        });
    };
    FirebaseWrapper.prototype.putFile = function (storagePath, rawFile) {
        var task = this.app.storage().ref(storagePath).put(rawFile);
        var taskResult = new Promise(function (res, rej) { return task.then(res).catch(rej); });
        var downloadUrl = taskResult.then(function (t) { return t.ref.getDownloadURL(); }).then(function (url) { return url; });
        return {
            task: task,
            taskResult: taskResult,
            downloadUrl: downloadUrl,
        };
    };
    FirebaseWrapper.prototype.getStorageDownloadUrl = function (fieldSrc) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.app.storage().ref(fieldSrc).getDownloadURL()];
            });
        });
    };
    FirebaseWrapper.prototype.serverTimestamp = function () {
        // This line doesn't work for some reason, might be firebase sdk.
        return firebase.firestore.FieldValue.serverTimestamp();
    };
    FirebaseWrapper.prototype.authSetPersistence = function (persistenceInput) {
        return __awaiter(this, void 0, void 0, function () {
            var persistenceResolved;
            return __generator(this, function (_a) {
                switch (persistenceInput) {
                    case 'local':
                        persistenceResolved = firebase.auth.Auth.Persistence.LOCAL;
                        break;
                    case 'none':
                        persistenceResolved = firebase.auth.Auth.Persistence.NONE;
                        break;
                    case 'session':
                    default:
                        persistenceResolved = firebase.auth.Auth.Persistence.SESSION;
                        break;
                }
                log('setPersistence', { persistenceInput: persistenceInput, persistenceResolved: persistenceResolved });
                return [2 /*return*/, this.app.auth()
                        .setPersistence(persistenceResolved)
                        .catch(function (error) { return console.error(error); })];
            });
        });
    };
    FirebaseWrapper.prototype.authSigninEmailPassword = function (email, password) {
        return __awaiter(this, void 0, void 0, function () {
            var user;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.app.auth().signInWithEmailAndPassword(email, password)];
                    case 1:
                        user = _a.sent();
                        return [2 /*return*/, user];
                }
            });
        });
    };
    FirebaseWrapper.prototype.authSignOut = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.app.auth().signOut()];
            });
        });
    };
    FirebaseWrapper.prototype.authGetUserLoggedIn = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var auth = _this.app.auth();
                        if (auth.currentUser)
                            return resolve(auth.currentUser);
                        var unsubscribe = _this.app.auth().onAuthStateChanged(function (user) {
                            unsubscribe();
                            if (user) {
                                resolve(user);
                            }
                            else {
                                reject();
                            }
                        });
                    })];
            });
        });
    };
    FirebaseWrapper.prototype.GetUserLogin = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authGetUserLoggedIn()];
            });
        });
    };
    /** @deprecated */
    FirebaseWrapper.prototype.auth = function () {
        return this.app.auth();
    };
    /** @deprecated */
    FirebaseWrapper.prototype.storage = function () {
        return this.app.storage();
    };
    /** @deprecated */
    FirebaseWrapper.prototype.GetApp = function () {
        return this.app;
    };
    /** @deprecated */
    FirebaseWrapper.prototype.db = function () {
        return this.firestore;
    };
    return FirebaseWrapper;
}());
export { FirebaseWrapper };
function ObtainFirebaseApp(firebaseConfig, options) {
    var _a;
    if (options.app) {
        return options.app;
    }
    var isInitialized = !!((_a = firebase.apps) === null || _a === void 0 ? void 0 : _a.length);
    if (isInitialized) {
        return firebase.app();
    }
    else {
        return firebase.initializeApp(firebaseConfig);
    }
}
//# sourceMappingURL=FirebaseWrapper.js.map