import { LogNoOp, LoggerBase } from './logger-base';
var LOGGER_ENABLEDKEY = 'LOGGING_FIRESTORE_COSTS_ENABLED';
var logger = new LoggerBase('ðŸ’¸firestore-costs:', LOGGER_ENABLEDKEY);
var KEY_SINGLE = 'firecosts-single-reads';
export function MakeFirestoreLogger(options) {
    function notEnabled() {
        var _a;
        return !((_a = options === null || options === void 0 ? void 0 : options.lazyLoading) === null || _a === void 0 ? void 0 : _a.enabled);
    }
    function incrementRead(incrementBy) {
        if (incrementBy === void 0) { incrementBy = 1; }
        var currentCountRaw = localStorage.getItem(KEY_SINGLE) || '';
        var currentCount = parseInt(currentCountRaw) || 0;
        var incremented = currentCount + incrementBy;
        localStorage.setItem(KEY_SINGLE, incremented + '');
        return incremented;
    }
    function clearCache() {
        localStorage.removeItem(KEY_SINGLE);
    }
    return {
        SetEnabled: function (isEnabled) {
            logger.SetEnabled(isEnabled);
        },
        ResetCount: function (shouldReset) {
            shouldReset && clearCache();
        },
        logDocument: function (docCount) {
            if (notEnabled()) {
                return LogNoOp;
            }
            var count = incrementRead(docCount);
            var suffix = "+".concat(docCount, " (session total=").concat(count, " documents read)");
            var boundLogFn = logger.log.bind(console, suffix);
            return boundLogFn;
        },
    };
}
//# sourceMappingURL=firestore-logger.js.map