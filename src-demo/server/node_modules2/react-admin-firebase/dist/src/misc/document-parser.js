var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { logWarn } from "./logger";
import { applyRefDocs, translateDocFromFirestore } from "./translate-from-firestore";
export function parseFireStoreDocument(doc) {
    if (!doc) {
        logWarn('parseFireStoreDocument: no doc', { doc: doc });
        return {};
    }
    var data = doc.data();
    var result = translateDocFromFirestore(data);
    var dataWithRefs = applyRefDocs(result.parsedDoc, result.refdocs);
    // React Admin requires an id field on every document,
    // So we can just using the firestore document id
    return __assign({ id: doc.id }, dataWithRefs);
}
//# sourceMappingURL=document-parser.js.map