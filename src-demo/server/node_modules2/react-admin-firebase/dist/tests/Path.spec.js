import { getAbsolutePath } from '../src/misc';
test('path test 1', function () {
    var santized = getAbsolutePath('root/doc', 'coll');
    expect(santized).toBe('root/doc/coll');
});
test('path test 2', function () {
    var santized = getAbsolutePath('/root/doc/', 'coll');
    expect(santized).toBe('root/doc/coll');
});
test('path test - minimum paths', function () {
    var santized = getAbsolutePath('t/d', 'coll');
    expect(santized).toBe('t/d/coll');
});
test('path test - test null resource', function () {
    var run = function () {
        var santized = getAbsolutePath('/root/doc/', null);
    };
    expect(run).toThrowError();
});
test('path test - test incorrect rootRef', function () {
    var run = function () {
        var santized = getAbsolutePath('/root/doc/asdasd', 'scaascasc');
    };
    expect(run).toThrowError();
});
test('path test - function returns same results as string', function () {
    expect(getAbsolutePath(function () { return 'root/doc'; }, 'col1')).toBe(getAbsolutePath('root/doc', 'col1'));
});
//# sourceMappingURL=Path.spec.js.map