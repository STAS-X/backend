import { applyRefDocs, REF_INDENTIFIER, translateDocFromFirestore, translateDocToFirestore } from "../src/misc";
describe("reference-document-parser.spec", function () {
    test("test translateDocToFirestore", function () {
        var dataToCreate = {
            name: "Some guy",
            items: [
                {
                    user: "dan",
                    friend: "ref",
                    ___REF_FULLPATH_friend: "my/ref",
                },
            ],
        };
        var result = translateDocToFirestore(dataToCreate);
        expect(result.refdocs.length).toBe(1);
        expect(result.refdocs[0].fieldDotsPath).toBe("items.0.___REF_FULLPATH_friend");
        expect(result.refdocs[0].refPath).toBe("my/ref");
    });
    test("test translateDocFromFirestore", function () {
        var refDocPath = 'fake/doc/path';
        var dataFromDb = {
            myrefdoc: makeFakeRefDoc(refDocPath),
        };
        var result = translateDocFromFirestore(dataFromDb);
        expect(result.refdocs.length).toBe(1);
        expect(result.refdocs[0].fieldPath).toBe("myrefdoc");
        expect(result.refdocs[0].refDocPath).toBe(refDocPath);
    });
    describe('applyRefDocs', function () {
        test("keeps existing fields", function () {
            var doc = {
                somefield: 'okay',
            };
            var result = applyRefDocs(doc, [
                makeRefDocFound('doc1', 'my/doc'),
            ]);
            expect(result.somefield).toBe('okay');
        });
        test("adds refdoc field", function () {
            var doc = {
                somefield: 'okay',
            };
            var result = applyRefDocs(doc, [
                makeRefDocFound('doc1', 'my/doc'),
            ]);
            expect(result[REF_INDENTIFIER + 'doc1']).toBe('my/doc');
        });
    });
});
function makeRefDocFound(fieldPath, refDocPath) {
    return {
        fieldPath: fieldPath,
        refDocPath: refDocPath,
    };
}
function makeFakeRefDoc(docPath) {
    return {
        id: docPath.split('/').pop(),
        firestore: {},
        parent: {},
        path: docPath,
    };
}
//# sourceMappingURL=reference-document-parser.spec.js.map