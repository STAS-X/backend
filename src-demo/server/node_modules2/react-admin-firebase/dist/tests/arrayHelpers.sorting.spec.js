import { sortArray } from "../src/misc";
describe("array sort", function () {
    test("returns an ascending array", function () {
        var input = [{ a: 1 }, { a: 2 }];
        var expected = [{ a: 1 }, { a: 2 }];
        sortArray(input, "a", "asc");
        expect(input).toEqual(expected);
    });
    test("returns an ascending array - nested", function () {
        var input = [{ obj: { a: 2 } }, { obj: { a: 1 } }];
        var expected = [{ obj: { a: 1 } }, { obj: { a: 2 } }];
        sortArray(input, "obj.a", "asc");
        expect(input).toEqual(expected);
    });
    test("returns an descending array", function () {
        var input = [{ a: 1 }, { a: 2 }];
        var expected = [{ a: 2 }, { a: 1 }];
        sortArray(input, "a", "desc");
        expect(input).toEqual(expected);
    });
    test("sorting dates", function () {
        var input = [
            { date: new Date('2019-10-13') },
            { date: new Date('2019-10-12') },
            { date: new Date('2019-10-20') }
        ];
        sortArray(input, "date", "asc");
        var firstSortedItem = input[0];
        expect(firstSortedItem).toBeTruthy();
        expect(firstSortedItem.date).toBeInstanceOf(Date);
        expect(firstSortedItem.date).toEqual(new Date('2019-10-12'));
    });
    test("sorting dates, with times", function () {
        var input = [
            { date: new Date('2019-10-12, 10:20 pm') },
            { date: new Date('2019-10-24, 11:20 pm') },
            { date: new Date('2019-10-12, 9:20 pm') }
        ];
        sortArray(input, "date", "desc");
        expect(input[0].date).toEqual(new Date('2019-10-24, 11:20 pm'));
        expect(input[1].date).toEqual(new Date('2019-10-12, 10:20 pm'));
        expect(input[2].date).toEqual(new Date('2019-10-12, 9:20 pm'));
    });
});
//# sourceMappingURL=arrayHelpers.sorting.spec.js.map