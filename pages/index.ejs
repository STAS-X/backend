<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link
			href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
			rel="stylesheet"
			integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
			crossorigin="anonymous"
		/>

		<title><%= appTitle%></title>

		<svg xmlns="http://www.w3.org/2000/svg" style="display: none">
			<symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
				<path
					d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"
				/>
			</symbol>
			<symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
				<path
					d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"
				/>
			</symbol>
			<symbol
				id="exclamation-triangle-fill"
				fill="currentColor"
				viewBox="0 0 16 16"
			>
				<path
					d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"
				/>
			</symbol>
		</svg>
	</head>

	<body>
		<% if (alerted) {%>
		<div
			class="alert <% if (created) { %>alert-success<%} else if (removed) {%>alert-warning<% } else {%>alert-info<%}%> alert-dismissible fade show"
			data-id="post-alert"
		>
			<svg
				class="bi flex-shrink-0 me-2"
				width="24"
				height="24"
				role="img"
				aria-label="<% if (created) { %>Success:<%} else if (removed) {%>Warning:<% } else {%>Info: <%}%>"
			>
				<use
					xlink:href="<% if (created) { %>#check-circle-fill<%} else if (removed) {%>#exclamation-triangle-fill<% } else {%>#info-fill<%}%>"
				/>
			</svg>
			<% if (created) { %>Note was added!<%} else if (removed) {%>Note was
			deleted! <% } else if (edited) {%>Note was edited!<%} else {%>Action not
			completed<%}%>
			<button
				type="button"
				class="btn-close"
				data-bs-dismiss="alert"
				aria-label="Close"
			></button>
		</div>
		<% } %>

		<div class="container">
			<h1><%= appTitle%></h1>

			<form action="/" method="post">
				<div class="form-group">
					<input type="text" class="form-control" name="title" required />
				</div>
				<button class="btn btn-primary my-3" type="submit" data-type="add">
					Create post
				</button>
			</form>
			<% if (notes.length >0) { %>
			<div class="card">
				<ul class="list-group">
					<% for (const note of notes) { %>
					<li
						class="list-group-item d-flex justify-content-between align-items-center"
					>
						<span
							>Title - <%= note.title%> <br />
							TimeStamp - <%= note.id%> <br />
						</span>
						<div>
							<button
								class="btn <% if (id && id === note.id) {%>btn-primary btn-success <% } else { %>btn-primary <%}%> mx-2"
								onclick="fetch_data({note : {id:this.dataset.id, title: '<%=note.title%>'},  type:'edit'})"
								data-type="edit"
								data-id="<%=note.id%>"
							>
								Edit note
							</button>

							<button
								class="btn btn-danger"
								onclick="fetch_data({note : {id:this.dataset.id, title: '<%=note.title%>'},  type:'remove'})"
								data-type="remove"
								data-id="<%=note.id%>"
							>
								&times;
							</button>
						</div>
					</li>
					<%}%>
				</ul>
			</div>
			<% } else { %> Notes is empty! <% } %>
		</div>

		<script
			src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.min.js"
			defer
		></script>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
			    <% if (alerted) { %>
			                   //if (!bootstrap.Alert) return;
			        const alertNode = document.querySelector('[data-id="post-alert"]');
			        const alertBoot=bootstrap.Alert.getOrCreateInstance(alertNode);

			                 <% if (!created) { %>
			                          if (window.history.replaceState) {
			              			   window.history.pushState({}, null, '/');
			                 } <%}%>

			                 <% if (edited && id) { %>
                             	setTimeout(() => {
										document.querySelector(`button[data-type="edit"][data-id="<%=id%>"]`).classList.toggle('btn-success');
									}, 1000);
			                 <%}%>

			                 if (document.querySelector('input[name="title"]')) document.querySelector('input[name="title"]').focus();

			                 alertNode.addEventListener('closed.bs.alert', () => {
			                     if (document.querySelector('input[name="title"]')) document.querySelector('input[name="title"]').focus();
			                     alertBoot.dispose();
			        });
			                 setTimeout((alert)=> {
			                     if (document.querySelector('[data-id="post-alert"]')) {
			                     alert.close();
			                     }
			                 },3000,alertBoot);
			    <% } %>
			});
		</script>
		<script>
			async function fetch_data(data) {
				try {
					if (data.type === 'remove') {
						const response = await fetch(`/remove/${data.note.id}`, {
							method: 'DELETE',
							headers: {
								'Content-Type': 'application/json',
								// 'Content-Type': 'application/x-www-form-urlencoded',
							},
							redirect: 'follow',
						});
						if (response.ok) {
							const body = await response.json();
							if (body.status === 'completed') {
								console.log(`Note ${data.note.id} removed success`);
							} else console.log(`Error`);
						}
						window.location.href = `/remove/${data.note.id}`;
					} else {
						let newTitle = prompt(`Edit note ${data.note.id}`, data.note.title);
						if (newTitle && newTitle !== data.note.title) {
							const response = await fetch(`/edit/${data.note.id}`, {
								method: 'PUT',
								headers: {
									'Content-Type': 'application/json',
									// 'Content-Type': 'application/x-www-form-urlencoded',
								},
								redirect: 'follow',
								body: JSON.stringify({ ...data.note, title: newTitle }),
							});

							if (response.ok) {
								const body = await response.json();
								if (body.status === 'completed') {
									console.log(`Note ${data.note.id} edited success`);
								} else console.error(`Error`);
							}

							window.location.href = `/edit/${data.note.id}`;
						} else console.warning('Title must have least one symbol and differ from source');
					}
				} catch (error) {
					console.error('Ошибка:', error);
				}
			}
		</script>
	</body>
</html>
